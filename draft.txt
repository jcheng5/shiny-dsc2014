Users today are asking for more interactivity.

Coding for interactivity is fundamentally about responding to changing inputs.


Changing inputs can trigger *recalculations* and *side effects*.

The traditional solution for interactivity is callback oriented programming.


updatePlot <- function() {
  selectedData <- iris[,c(input$x, input$y)]
  clusters <- kmeans(selectedData, input$clusters)
  par(mar = c(5.1, 4.1, 0, 1))
  plot(selectedData,
       col = clusters$cluster,
       pch = 20, cex = 3)
  points(clusters$centers, pch = 4, cex = 4, lwd = 4)
}

input$onChange("x", function(value) {
  updatePlot()
})

input$onChange("y", function(value) {
  updatePlot()
})

input$onChange("clusters", function(value) {
  updatePlot()
})


selectedData <- reactive({
  iris[,c(input$x, input$y)]
})
clusters <- reactive({
  kmeans(selectedData(), input$clusters)
})
output$plot <- renderPlot({
  par(mar = c(5.1, 4.1, 0, 1))
  plot(selectedData,
       col = clusters$cluster,
       pch = 20, cex = 3)
  points(clusters$centers, pch = 4, cex = 4, lwd = 4)
})
